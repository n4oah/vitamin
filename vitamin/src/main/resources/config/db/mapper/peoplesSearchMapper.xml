<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 매퍼 연결 -->
<mapper namespace="kr.co.vitamin.repository.mapper.PeoplesSearchMapper">
	
	<resultMap type="city" id="cityMap">
		<id column="city_code" property="cityCode" />
		<result column="sub_name" property="subName" />
		<collection property="areaList" javaType="java.util.ArrayList" resultMap="areaMap" />
	</resultMap>
	
	<resultMap type="java.util.HashMap" id="areaMap">
		<id column="area_code" property="areaCode" />
		<result column="name" property="name" />
	</resultMap>
	
	<resultMap type="schoolLevel" id="schoolLevelMap">
		<result column="school_level_no" property="schoolLevelNo" />
		<result column="graduate_state" property="graduateState" />
		<result column="level" property="level" />
	</resultMap>
	
	<resultMap type="certificate" id="certificateMap">
		<result column="certificate_no" property="certificateNo"/>
		<result column="name" property="name"/>
		<result column="licensing_department_no" property="licensingDepartmentNo"/>
	</resultMap>
	
	<resultMap type="peoples" id="peoplesMap">
		<result column="title" property="title" />
		<result column="resume_no" property="resumeNo" />
		<result column="member_no" property="memberNo" />
		<result column="member_name" property="name" />
		<result column="gender" property="gender" />
		<result column="graduate_state" property="graduateState" />
		<result column="sub_name" property="cityName" />
		<result column="area_name" property="areaName" />
		<result column="resume_no" property="resumeNo" />
		<result column="age" property="age" />
		<result column="career_state" property="careerState" />
		<result column="career_years" property="careerYears" />
		<result column="job_state" property="jobState" />
		<result column="army_service_state" property="armyServiceState" />
		<result column="army_service_reason" property="armyServiceReason" />
		<result column="reg_date" property="regDate" />
		<collection resultMap="certificateMap" javaType="java.util.ArrayList" property="certificate" />
	</resultMap>	
	
	<resultMap type="calendarRecruit" id="calendarRecruitMap">
		<result column="company_name" property="title" />
		<result column="title" property="recruitTitle" />
		<result column="recruit_date_start" property="start" />
		<result column="recruit_date_end" property="end" />
		<result column="company_no" property="companyNo" />
		<result column="recruit_no" property="recruitNo" />
	</resultMap>
	
	<resultMap type="calendarRecruit" id="calendarRecruitMap2">
		<result column="start_date" property="start" />
		<result column="end_date" property="end" />
		<result column="schedule_title" property="title" />
	</resultMap>
	
	<!-- 쿼리 -->
	<select id="cityList" resultMap="cityMap">
		select * from vi_city_code
	</select>
	
	<select id="abcd" resultMap="cityMap" parameterType="int">
		select a.city_code, a.sub_name, b.area_code, b.name from
		vi_city_code a
		join vi_area_code b
		on a.city_code = b.city_code
		where a.city_code = #{no};
	</select>
	
	<select id="schList" resultMap="schoolLevelMap">
		select * from vi_school_level order by level asc
	</select>
	
	<select id="licenseList" parameterType="string" resultMap="certificateMap">
		select * from vi_certificate where name like CONCAT('%',#{name},'%')
	</select>
	
	<select id="peoplesSearch" parameterType="peopleSearch" resultMap="peoplesMap">
		select * from 
		<!-- 이력서 -->
		(select * from vi_resume
		<where>
			open_state = 0
			<!-- open_state = 1 -->
			
			<if test="lastNo != null">
				and resume_no &lt; #{lastNo}
			</if>
			
			<if test="marry != null">
				and marry_state = #{marry}
			</if>
			
			<if test="jobState != null">
				and job_state in (1, 3)
			</if>
		
			<if test="schoolCode != null">
				and school_level_no in
				<foreach collection="schoolCode" item="school" open="(" separator="," close=")">
					#{school}
				</foreach>
			</if>
			
			<choose>
				<when test="careerStart != null and careerEnd != null">
					and career_years between #{careerStart} and #{careerEnd}
				</when>
				
				<when test="careerStart != null">
					and career_years &gt;= #{careerStart}
				</when>
				
				<when test="careerEnd != null">
					and (career_years &lt;= #{careerEnd} or career_years is null)
				</when>
			</choose>
		</where>) resume
		
		<!-- 최종 학력 -->
		inner join vi_school_level
		on resume.school_level_no = vi_school_level.level
		
		inner join (select * from vi_army_service
		<if test="army != null">
			<where>
				army_service_state in
				<foreach collection="army" item="a" open="(" separator="," close=")">
					#{a}
				</foreach>
			</where>
		</if>) army
		on resume.army_service_no = army.army_service_no
		
		<!-- 회원 -->
		inner join (select vi_member.*, date_format(birth_date, '%Y')-date_format(now(), '%Y')+1 as age, name as member_name from vi_member
		<where>
			<if test="gender != null">
				<choose>
					<when test="gender == 1">
						and gender = 'm'
					</when>
					
					<when test="gender == 2">
						and gender = 'w'
					</when>
				</choose>
			</if>
			<choose>
				<when test="ageStart != null and ageEnd != null">
					and date_format(birth_date, '%Y')-date_format(now(), '%Y')+1 between #{ageStart} and #{ageEnd}
				</when>
				
				<when test="ageStart != null">
					and date_format(birth_date, '%Y')-date_format(now(), '%Y')+1 &gt;= #{ageStart}
				</when>
				
				<when test="ageEnd != null">
					and date_format(birth_date, '%Y')-date_format(now(), '%Y')+1 &lt;= #{ageEnd}
				</when>
			</choose>
		</where>) member
		on resume.member_no = member.member_no
		
		inner join (select * from vi_account) account
		on member.account_no = account.account_no
		
		<!-- 자격증 -->
		<if test="licenseCode != null">
		inner join (select * from vi_resume_certification
		<where>
				certification_title in
				<foreach collection="licenseName" item="license" open="(" separator="," close=")">
					#{license}
				</foreach>
		</where>) license
		on resume.certification_no = license.certification_no
		</if>
		
		<!-- 주소 -->
		inner join (select * from vi_address
		<where>
			<if test="cityCode != null">
				city_code in
				<foreach collection="cityCode" item="city" open="(" separator="," close=")">
					#{city}
				</foreach>
			</if>
			
			<if test="areaCode != null">
				area_code in
				<foreach collection="areaCode" item="area" open="(" separator="," close=")">
					#{area}
				</foreach>
			</if>
		</where>) address
		on account.address_no = address.address_no
		
		<!-- 시/도 -->
		inner join (select * from vi_city_code) city
		on address.city_code = city.city_code
		<!-- 시/군/구 -->
		inner join (select area_code, name as area_name from vi_area_code) area
		on address.area_code = area.area_code
		
		<!-- order by resume.resume_no desc -->
		
		<if test="orderBy != null">
			order by ${orderBy}
		</if>
		
		limit #{page}, 10
	</select>
	
	
	<select id="peoplesSearchSize" parameterType="peopleSearch" resultType="int">
		select count(*) from 
		<!-- 이력서 -->
		(select * from vi_resume
		<where>
			open_state = 0
			<!-- open_state = 1 -->
			
			<if test="marry != null">
				and marry_state = #{marry}
			</if>
			
			<if test="jobState != null">
				and job_state in (1, 3)
			</if>
		
			<if test="schoolCode != null">
				and school_level_no in
				<foreach collection="schoolCode" item="school" open="(" separator="," close=")">
					#{school}
				</foreach>
			</if>
			
			<choose>
				<when test="careerStart != null and careerEnd != null">
					and career_years between #{careerStart} and #{careerEnd}
				</when>
				
				<when test="careerStart != null">
					and career_years &gt;= #{careerStart}
				</when>
				
				<when test="careerEnd != null">
					and (career_years &lt;= #{careerEnd} or career_years is null)
				</when>
			</choose>
		</where>) resume
		
		<!-- 최종 학력 -->
		inner join vi_school_level
		on resume.school_level_no = vi_school_level.level
		
		inner join (select * from vi_army_service
		<if test="army != null">
			<where>
				army_service_state in
				<foreach collection="army" item="a" open="(" separator="," close=")">
					#{a}
				</foreach>
			</where>
		</if>) army
		on resume.army_service_no = army.army_service_no
		
		<!-- 회원 -->
		inner join (select vi_member.*, date_format(birth_date, '%Y')-date_format(now(), '%Y')+1 as age, name as member_name from vi_member
		<where>
			<if test="gender != null">
				<choose>
					<when test="gender == 1">
						gender = 'm'
					</when>
					
					<when test="gender == 2">
						gender = 'w'
					</when>
				</choose>
			</if>
			<choose>
				<when test="ageStart != null and ageEnd != null">
					and date_format(birth_date, '%Y')-date_format(now(), '%Y')+1 between #{ageStart} and #{ageEnd}
				</when>
				
				<when test="ageStart != null">
					and date_format(birth_date, '%Y')-date_format(now(), '%Y')+1 &gt;= #{ageStart}
				</when>
				
				<when test="ageEnd != null">
					and date_format(birth_date, '%Y')-date_format(now(), '%Y')+1 &lt;= #{ageEnd}
				</when>
			</choose>
		</where>) member
		on resume.member_no = member.member_no
		
		inner join (select * from vi_account) account
		on member.account_no = account.account_no
		
		<!-- 자격증 -->
		<if test="licenseCode != null">
		inner join (select * from vi_resume_certification
		<where>
				certification_title in
				<foreach collection="licenseName" item="license" open="(" separator="," close=")">
					#{license}
				</foreach>
		</where>) license
		on resume.certification_no = license.certification_no
		</if>
		
		<!-- 주소 -->
		inner join (select * from vi_address
		<where>
			<if test="cityCode != null">
				city_code in
				<foreach collection="cityCode" item="city" open="(" separator="," close=")">
					#{city}
				</foreach>
			</if>
			
			<if test="areaCode != null">
				area_code in
				<foreach collection="areaCode" item="area" open="(" separator="," close=")">
					#{area}
				</foreach>
			</if>
		</where>) address
		on account.address_no = address.address_no
		
		<!-- 시/도 -->
		inner join (select * from vi_city_code) city
		on address.city_code = city.city_code
		<!-- 시/군/구 -->
		inner join (select area_code, name as area_name from vi_area_code) area
		on address.area_code = area.area_code
		
		order by resume.resume_no desc
	</select>
	
	<select id="selectRecruitCalendar" parameterType="int" resultMap="calendarRecruitMap">
		select * from (select * from vi_bookmark where member_no = #{memberNo}) bookmark
		inner join vi_company
		on bookmark.company_no = vi_company.company_no
		inner join vi_recruit_write
		on bookmark.company_no = vi_recruit_write.company_no
	</select>
	
	<select id="selectMyCalendar" parameterType="int" resultMap="calendarRecruitMap2">
		select * from vi_my_schedule
		where member_no = #{memberNo}
	</select>
	
	<insert id="insertSchedule" parameterType="schedule">
		insert into vi_my_schedule (member_no, start_date, end_date, schedule_title)
		values (#{memberNo}, #{startDate}, #{endDate}, #{scheduleTitle})
	</insert>
	
	<resultMap type="machine" id="machineMap">
		<result column="percent" property="percent" />
		<result column="value" property="value" />
		<result column="recruit_no" property="recruitNo" />
		<result column="member_no" property="memberNo" />
	</resultMap>
	
	<select id="selectMachine" parameterType="int" resultMap="machineMap">
		select (100-value*-1) as percent, vi_machine.* FROM vi_machine
		where member_no = #{memberNo} order by value desc
	</select>
	
</mapper>