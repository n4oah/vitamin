<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 매퍼 연결 -->
<mapper namespace="kr.co.vitamin.repository.mapper.AccountMapper">
	<resultMap type="account" id="accountMap">
		<result column="account_no" property="accountNo" />
		<result column="id" property="id" />
		<result column="pwd" property="pwd" />
		<result column="email" property="email" />
		<result column="address_no" property="addressNo" />
		<result column="email_token_no" property="emailTokenNo" />
		<result column="reg_date" property="regDate" />
		<result column="member_type" property="memberType" />
		<result column="email_token_status" property="emailTokenStatus" />

		<discriminator javaType="int" column="member_type">
			<case value="1" resultMap="memberMap"/>
			<case value="2" resultMap="companyMap"/>
		</discriminator>
	</resultMap>

	<resultMap type="member" id="memberMap" extends="accountMap">
		<result column="member_no" property="memberNo" />
		<result column="account_no" property="accountNo" />
		<result column="name" property="name" />
		<result column="phone_number" property="phoneNumber" />
		<result column="birth_date" property="birthDate" />
		<result column="gender" property="gender" />
	</resultMap>
	
	<resultMap type="company" id="companyMap" extends="accountMap">
		<result column="company_no" property="companyNo" />
		<result column="account_no" property="accountNo" />
		<result column="license_number" property="licenseNumber" />
		<result column="company_name" property="companyName" />
		<result column="boss_name" property="bossName" />
		<result column="company_type" property="companyType" />
		<result column="buildup_date" property="buildupDate" />
		<result column="business_content" property="businessContent" />
		<result column="business_no" property="businessNo" />
		<result column="tel_number" property="telNumber" />
		<result column="homepage" property="homepage" />
		<result column="employee_count" property="employeeCount" />
		<result column="logo_no" property="logoNo" />
	</resultMap>
	
	<select id="selectOverlapIdCheck" resultMap="accountMap" parameterType="account">
		SELECT * FROM vi_account
		WHERE id=#{id} LIMIT 1
	</select>
	
	<insert id="insertAccount" parameterType="account">
		INSERT INTO vi_account
		(account_no, id, pwd, email, address_no, email_token_no, email_token_status, member_type)
		VALUES
		(#{accountNo}, #{id}, #{pwd}, #{email}, #{addressNo}, #{emailTokenNo}, #{emailTokenStatus}, #{memberType})
	</insert>
	
	<insert id="insertMember" parameterType="member">
		INSERT INTO vi_member
		(account_no, name, phone_number, birth_date, gender)
		VALUES
		(#{accountNo}, #{name}, #{phoneNumber}, #{birthDate}, #{gender})
	</insert>
	
	<insert id="insertCompany" parameterType="company">
		INSERT INTO vi_company
		(account_no, license_number, company_name, boss_name, company_type, buildup_date, business_content,
		 business_no, tel_number, homepage, employee_count, logo_no)
		VALUES
		(#{accountNo}, #{licenseNumber}, #{companyName}, #{bossName}, #{companyType}, #{buildupDate},
		 #{businessContent}, #{businessNo}, #{telNumber}, #{homepage}, #{employeeCount}, #{logoNo})
	</insert>
	
	<update id="updateEmailToken" parameterType="account">
		UPDATE vi_account SET
		email_token_status = #{emailTokenStatus}, email_token_no = null
		WHERE email_token_no = #{emailTokenNo}
		LIMIT 1
	</update>
	
	<select id="selectMemberType" parameterType="account" resultType="Integer">
		SELECT member_type FROM vi_account
		WHERE id=#{id} OR account_no=#{accountNo} LIMIT 1
	</select>
	
	<select id="selectLoginAccount" parameterType="account" resultMap="accountMap">
		SELECT account.*, member.*
		FROM vi_account AS account JOIN
		<choose>
			<when test="memberType == 1">
		 		vi_member
		 	</when>
		 	<when test="memberType == 2">
		 		vi_company
		 	</when>
		</choose>
		AS member
		WHERE (account.id=#{id} AND account.pwd=#{pwd}) AND account.account_no = member.account_no
	</select>
	
	<select id="selectAccountOfId" parameterType="account" resultMap="accountMap">
		SELECT * from vi_account WHERE id=#{id}
	</select>
	
	<update id="updateAccount" parameterType="account">
		UPDATE vi_account AS account,
		<if test="memberType == 1">
			vi_member
		</if>
		<if test="memberType == 2">
			vi_company
		</if>
		AS member
		<set>
			<if test="pwd != null">
				account.pwd=#{pwd},
			</if>
			account.email=#{email},
			<if test="memberType == 1">
				member.name=#{name}, member.phone_number=#{phoneNumber},
			</if>
			<if test="memberType == 2">
				member.tel_number=#{telNumber}, member.boss_name=#{bossName}, member.logo_no=#{logoNo},
				member.employee_count=#{employeeCount}, member.homepage=#{homepage},
				
			</if>
		</set>
		WHERE account.account_no=#{accountNo} AND account.account_no = member.account_no
	</update>
	
	<select id="selectAccountOfNo" parameterType="account" resultMap="accountMap">
		SELECT account.*, member.*
		FROM vi_account AS account JOIN
		<choose>
			<when test="memberType == 1">
		 		vi_member
		 	</when>
		 	<when test="memberType == 2">
		 		vi_company
		 	</when>
		</choose> 
		AS member
		WHERE account.account_no=#{accountNo} AND member.account_no=#{accountNo};
	</select>
	
	<select id="selectProfileNo" parameterType="account" resultType="int">
		SELECT file_no FROM vi_profile_image
		WHERE account_no = #{accountNo} AND profile_type = 0 LIMIT 1
	</select>
	
	<select id="selectAccount" parameterType="int" resultMap="accountMap">
	    select a.*, b.*, c.*
	      from vi_account a
	      left JOIN vi_member b
	        on a.account_no = b.account_no
	      left JOIN vi_company c
	        on a.account_no = c.account_no    
	     WHERE (a.account_no = #{accountNo})
	</select>
	
	<select id="selectAccountOfMemberOrCompanyNo" parameterType="account" resultMap="accountMap">
		SELECT account.*, member.*
		FROM
			vi_account AS account,
			<choose>
				<when test="memberType == 1">
			 		vi_member AS member
			 	</when>
			 	<when test="memberType == 2">
			 		vi_company AS member
			 	</when>
			</choose> 
		WHERE
			<choose>
				<when test="memberType == 1">
			 		member.member_no = #{memberNo}
			 	</when>
			 	<when test="memberType == 2">
			 		member.company_no = #{companyNo}
			 	</when>
			</choose> 
			AND member.account_no = account.account_no
	</select>
	
	<select id="selectNextAutoIncrement" resultType="int">
		<include refid="CommonMapper.getNextAutoIncrement">
			<property name="tableName" value="vi_account"/>
		</include>
	</select>
</mapper>